{"version":3,"sources":["TableLine.js","Buttons.js","HiddenTableForm.js","HiddenAddColumnForm.js","Pagination.js","api/employees.js","App.js","index.js"],"names":["TableLine","this","props","employee","handleCheckboxChange","preparedTableHeaders","tableHeaders","map","item","Object","keys","prop","i","key","type","checked","onChange","_id","React","Component","Buttons","employees","handleDeleteEmployee","startAddingEmployee","startEdittingEmployee","inEdition","startAddingColumn","className","onClick","disabled","filter","length","HiddenTableForm","state","firstName","lastName","login","workPhone","personalPhone","workEmail","personalEmail","businessLocation","company","role","hourlyRate","isActive","handleInputChange","event","value","target","name","setState","nextProps","checkedEmployees","formActive","handleFormSubmit","changeCurrentEmployee","htmlFor","id","hidden","HiddenAddColumnForm","columnName","onColumnAdding","handleAddColumnSubmit","Pagination","totalNumberOfData","employeesPerPage","handleChangeActivePage","activePage","totalPages","Math","ceil","pages","push","page","deleteEmployee","axios","post","App","prevstate","togledEmployees","then","res","filteredEmployees","catch","err","console","log","obj","user","newObj","getEmpoyeesList","personalail","editedEmployee","personalworkMail","personalMail","values","includes","alert","get","getEmployees","data","userList","fullLength","error","header","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.576eb540.chunk.js","sourcesContent":["import React from 'react';\n\nclass TableLine extends React.Component {\n\n  render() {\n    const { employee, handleCheckboxChange, tableHeaders } = this.props;\n    const preparedTableHeaders = tableHeaders.map(item => Object.keys(item)[0]);\n\n    return (\n      <tr>\n        {preparedTableHeaders.map((prop, i) => {\n          switch(typeof employee[prop]) {\n            case 'string': return (<td key={10000 + i}>{employee[prop]}</td>);\n            case 'number': return (<td key={10000 + i}>{employee[prop]}</td>);\n            case 'boolean': return (\n              <td key={10000 + i}>\n                <input \n                  type='checkbox'\n                  checked={employee[prop]}\n                  onChange={() => handleCheckboxChange(employee._id)}\n                />\n              </td>\n            )\n            default: return <td></td>;\n          }\n        })}\n      </tr>\n    )\n  }\n}\n\nexport default TableLine;\n","import React from 'react';\n\nclass Buttons extends React.Component {\n  render() {\n    const { employees, handleDeleteEmployee, startAddingEmployee, startEdittingEmployee, inEdition, startAddingColumn } = this.props;\n\n    return (\n      <div className='buttons'>\n        <button\n          type='button'\n          className='addEmployeeButton'\n          onClick={startAddingEmployee}\n        >\n          ADD EMPLOYEE\n        </button>\n        <button\n          type='button'\n          className='editEmployeeButton'\n          disabled={employees.filter(employee => employee.checked === true).length !== 1}\n          onClick={startEdittingEmployee}\n        >\n          EDIT\n        </button>\n        <button\n          type='button'\n          className='deleteEmployeeButton'\n          disabled={inEdition}\n          onClick={handleDeleteEmployee}\n        >\n          DELETE\n        </button>\n        <button\n          type='button'\n          className='addColumnButton'\n          disabled={inEdition}\n          onClick={startAddingColumn}\n        >\n          ADD COLUMN\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default Buttons;\n","import React from 'react';\r\n\r\nclass HiddenTableForm extends React.Component {\r\n  state = {\r\n    firstName: '',\r\n    lastName: '',\r\n    login: '',\r\n    workPhone: 0, \r\n    personalPhone: 0,\r\n    workEmail: '',\r\n    personalEmail: '',\r\n    businessLocation: '',\r\n    company: '',\r\n    role: '',\r\n    hourlyRate: 0,\r\n    isActive: false\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.inEdition) {\r\n      this.setState({\r\n        firstName: this.props.checkedEmployees[0].firstName || '',\r\n        lastName: this.props.checkedEmployees[0].lastName || '',\r\n        login: this.props.checkedEmployees[0].login || '',\r\n        workPhone: this.props.checkedEmployees[0].workPhone || 0,\r\n        personalPhone: this.props.checkedEmployees[0].personalPhone || 0,\r\n        workEmail: this.props.checkedEmployees[0].workEmail || '',\r\n        personalEmail: this.props.checkedEmployees[0].personalEmail || '',\r\n        businessLocation: this.props.checkedEmployees[0].businessLocation || '',\r\n        company: this.props.checkedEmployees[0].company || '',\r\n        role: this.props.checkedEmployees[0].role || '',\r\n        hourlyRate: this.props.checkedEmployees[0].hourlyRate || 0,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { formActive, handleFormSubmit, changeCurrentEmployee, inEdition } = this.props;\r\n\r\n    return (\r\n      <form\r\n        className={(formActive) ? 'activeTable' : 'disabledTable'}\r\n      >\r\n        <b>Add Employee</b>\r\n        <br />\r\n        <div className='block'>\r\n          <p>PERSONAL</p>\r\n          <hr />\r\n          <div className='field'>\r\n            <label htmlFor='firstName'>\r\n              First Name:\r\n            </label>\r\n            <input \r\n              id='firstName' \r\n              type='text'\r\n              name='firstName'\r\n              value={this.state.firstName}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor='lastName'>\r\n              Last Name:\r\n            </label>\r\n            <input \r\n              id='lastName' \r\n              type='text'\r\n              name='lastName'\r\n              value={this.state.lastName}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor='login'>\r\n              Login:\r\n            </label>\r\n            <input \r\n              id='login' \r\n              type='text'\r\n              name='login'\r\n              value={this.state.login}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n        <p>CONTACT</p>\r\n        <hr />\r\n          <div className='field'>\r\n            <label htmlFor='workPhone'>\r\n              Work Phone:\r\n            </label>\r\n            <input \r\n              id='workPhone' \r\n              type='tel'\r\n              name='workPhone'\r\n              value={this.state.workPhone}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor='personalPhone'>\r\n              Personal Phone:\r\n            </label>\r\n            <input \r\n              id='personalPhone' \r\n              type='tel'\r\n              name='personalPhone'\r\n              value={this.state.personalPhone}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor='email'>\r\n              Work Email:\r\n            </label>\r\n            <input \r\n              id='email' \r\n              type='email'\r\n              name='workEmail'\r\n              value={this.state.workEmail}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor='personalEmail'>\r\n              Personal Email:\r\n            </label>\r\n            <input \r\n              id='personalEmail' \r\n              type='email'\r\n              name='personalEmail'\r\n              value={this.state.personalEmail}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n        <p>EMPLOYMENT</p>\r\n        <hr />\r\n          <div className='field'>\r\n            <label htmlFor='businessLocation'>\r\n              Business Location:\r\n            </label>\r\n            <select \r\n              id='businessLocation' \r\n              name='businessLocation'\r\n              value={this.state.businessLocation}\r\n              onChange={this.handleInputChange}\r\n            >\r\n              <option value='' hidden>Choose the location</option>\r\n              <option value='Kyiv'>Kyiv</option>\r\n              <option value='San Francisco'>San Francisco</option>\r\n              <option value='New York'>New York</option>\r\n            </select>\r\n          </div>\r\n          <div className='field'>\r\n          <label htmlFor='company'>\r\n            Company:\r\n          </label>\r\n            <select \r\n              id='company' \r\n              name='company'\r\n              value={this.state.company}\r\n              onChange={this.handleInputChange}\r\n            >\r\n              <option value='' hidden>Choose the company</option>\r\n              <option value='Moving LLC'>Moving LLC</option>\r\n              <option value='WTT Solutions'>WTT Solutions</option>\r\n              <option value='Kyivstar'>Kyivstar</option>\r\n              <option value='Apple'>Apple</option>\r\n            </select>\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor='role'>\r\n              Role:\r\n            </label>\r\n            <select \r\n              id='role' \r\n              name='role'\r\n              value={this.state.role}\r\n              onChange={this.handleInputChange}\r\n            >\r\n              <option value='' hidden>Choose the role</option>\r\n              <option value='Helper'>Helper</option>\r\n              <option value='Developer'>Developer</option>\r\n              <option value='Project Manager'>Project Manager</option>\r\n              <option value='Tester'>Tester</option>\r\n            </select>\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor='hourlyRate'>\r\n              Hourly Rate:\r\n            </label>\r\n            <input \r\n              id='hourlyRate' \r\n              type='number'\r\n              name='hourlyRate'\r\n              className='shortInput'\r\n              value={this.state.hourlyRate}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button\r\n          type='button'\r\n          className='submitButton'\r\n          onClick={(inEdition) ? () => changeCurrentEmployee(this.state) : () => handleFormSubmit(this.state)}\r\n        >\r\n          Add Employee\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HiddenTableForm;\r\n","import React from 'react';\r\n\r\nclass HiddenAddColumnForm extends React.Component {\r\n  state = {\r\n    columnName: '',\r\n    value: '',\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { onColumnAdding, handleAddColumnSubmit } = this.props;\r\n\r\n    return (\r\n      <form\r\n        className={(onColumnAdding) ? 'activeTable' : 'disabledTable'}\r\n      >\r\n        <h3>Add Column</h3>\r\n        <div className='block'>\r\n          <div className='field'>\r\n            <label htmlFor='columnName'>\r\n              Column Name:\r\n            </label>\r\n            <input\r\n              id='columnName' \r\n              type='text'\r\n              name='columnName'\r\n              value={this.state.columnName}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n          <div className='field'> \r\n            <label htmlFor='value'>\r\n              Value:\r\n            </label>\r\n            <input \r\n              id='value' \r\n              type='text'\r\n              name='value'\r\n              value={this.state.value}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button\r\n          type='button'\r\n          className='submitButton'\r\n          onClick={() => handleAddColumnSubmit(this.state)}\r\n        >\r\n          SUBMIT\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HiddenAddColumnForm;\r\n","import React from 'react';\r\n\r\nclass Pagination extends React.Component {\r\n\r\n  render() {\r\n    const { totalNumberOfData, employeesPerPage, handleChangeActivePage, activePage } = this.props;\r\n    const totalPages = Math.ceil(totalNumberOfData / employeesPerPage);\r\n    const pages = [];\r\n\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      pages.push(i);\r\n    }\r\n\r\n    return (\r\n      <ul className=\"pageList\">\r\n        {pages.map(page => (\r\n          <li \r\n            key={page} \r\n            value={page}\r\n            className={`${(activePage === page) ? 'active' : ''} pageItem`}\r\n            onClick={handleChangeActivePage}\r\n          >\r\n            {page}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n","import axios from 'axios';\r\n\r\nexport default function getEmployees (page) {\r\n  return axios.get(`http://192.168.0.167/user/page/${(page - 1) * 5}`)\r\n}\r\n\r\nexport function createEmployee (user) {\r\n  return axios.post('http://192.168.0.167/user/create', user)\r\n}\r\n\r\nexport function deleteEmployee (id) {\r\n  return axios.post(`http://192.168.0.167/user/remove/${id}`)\r\n}\r\n\r\nexport function editEmployee (id, user) {\r\n  return axios.post(`http://192.168.0.167/user/edit/${id}`, user)\r\n}\r\n","import React from 'react';\nimport TableLine from './TableLine';\nimport Buttons from './Buttons';\nimport HiddenTableForm from './HiddenTableForm';\nimport HiddenAddColumnForm from './HiddenAddColumnForm';\nimport Pagination from './Pagination';\nimport getEmployees, { createEmployee, deleteEmployee, editEmployee } from './api/employees';\n\nclass App extends React.Component {\n  state = {\n    tableHeaders: [\n      {checked: '#'}, \n      {_id: 'id' }, \n      {firstName: 'First Name'},\n      {lastName: 'Last Name'}, \n      {role: 'Role'}, \n      {businessLocation: 'Business Location'}, \n      {workEmail: 'Work Mail'}, \n      {workPhone: 'Phone'}, \n      {hourlyRate: 'Hourly Rate'}\n    ],\n    employees: [],\n    totalNumberOfData: 0,\n    checkedEmployees: [],\n    formActive: false,\n    inEdition: false,\n    onColumnAdding: false,\n    activePage: 1,\n    employeesPerPage: 5,\n  }\n\n  handleCheckboxChange = (id) => {\n    this.setState(prevstate => {\n      const togledEmployees = prevstate.employees.map(employee => {\n        if (employee._id !== id) {\n          return employee;\n        } else {\n          return {\n            ...employee,\n            checked: !employee.checked,\n          }\n        }\n      })\n\n      return {\n        employees: togledEmployees,\n        checkedEmployees: togledEmployees.filter(employee => employee.checked === true)\n      }\n    })\n  }\n\n  handleDeleteEmployee = () => {\n    const id = this.state.checkedEmployees.map(item => item._id);\n\n    if (id.length > 1) {\n      for(let i = 0; i < id.length; i++) {\n        deleteEmployee(id[i])\n        .then(res => {\n          const filteredEmployees = this.state.employees.filter(employee => employee._id !== id[i]);\n          this.setState({\n            employees: filteredEmployees,\n          })\n        })\n        .catch(err => {\n          console.log(err)\n        })\n      }\n    } else {\n      deleteEmployee(id)\n      .then(res => {\n        const filteredEmployees = this.state.employees.filter(employee => employee._id !== id[0]);\n        this.setState({\n          employees: filteredEmployees,\n        })\n      })\n      .catch(err => {\n        console.log(err)\n      }) \n    }\n  }\n\n  startAddingEmployee = () => {\n    this.setState({\n      formActive: true,\n      inEdition: false,\n      onColumnAdding: false,\n    })\n  }\n\n  handleFormSubmit = (obj) => {\n    const newObj = {\n      firstName: obj.firstName,\n      lastName: obj.lastName,\n      role: obj.role,\n      businessLocation: obj.businessLocation,\n      workEmail: obj.workEmail,\n      workPhone: obj.workPhone,\n      checked: false,\n      login: obj.login,\n      personalPhone: obj.personalPhone,\n      personalEmail: obj.personalEmail,\n      hourlyRate: obj.hourlyRate,\n    }\n\n    createEmployee(newObj)\n      .then(res => {\n        this.getEmpoyeesList(this.state.activePage)\n      });\n\n    this.setState({\n      formActive: false,\n      inEdition: false,\n      onColumnAdding: false,\n    })\n\n    obj.firstName = '';\n    obj.lastName = '';\n    obj.login = '';\n    obj.workPhone = 0;\n    obj.personalPhone = 0;\n    obj.workEmail = '';\n    obj.personalail = '';\n    obj.businessLocation = '';\n    obj.company = '';\n    obj.role = '';\n    obj.hourlyRate = 0;\n  }\n\n  startEdittingEmployee = () => {\n    this.setState({\n      formActive: true,\n      inEdition: true,\n      onColumnAdding: false,\n    })\n  }\n\n  changeCurrentEmployee = (obj) => {\n    const editedEmployee = this.state.checkedEmployees[0];\n\n    editedEmployee.firstName = obj.firstName;\n    editedEmployee.lastName = obj.lastName;\n    editedEmployee.role = obj.role;\n    editedEmployee.businessLocation = obj.businessLocation;\n    editedEmployee.workEmail = obj.workEmail;\n    editedEmployee.workPhone = obj.workPhone;\n    editedEmployee.hourlyRate = obj.hourlyRate;\n    editedEmployee.checked = false;\n    editedEmployee.login = obj.login;\n    editedEmployee.personalPhone = obj.personalPhone;\n    editedEmployee.personalworkMail = obj.personalworkMail;\n\n    editEmployee(editedEmployee._id, editedEmployee)\n\n    this.setState({\n      formActive: false,\n      inEdition: false,\n    })\n\n    obj.firstName = '';\n    obj.lastName = '';\n    obj.login = '';\n    obj.workPhone = 0;\n    obj.personalPhone = 0;\n    obj.workEmail = '';\n    obj.personalMail = '';\n    obj.businessLocation = '';\n    obj.company = '';\n    obj.role = '';\n    obj.hourlyRate = 0;\n  }\n\n  startAddingColumn = () => {\n    this.setState({\n      onColumnAdding: true,\n      formActive: false,\n      inEdition: false,\n    })\n  }\n\n  handleAddColumnSubmit = (obj) => {\n\n    if (this.state.tableHeaders.map(item => Object.values(item)[0]).includes(obj.columnName)) {\n      return alert('This prop is alredy in this table!');\n    }\n\n    const newObj = {\n      [obj.value]: obj.columnName\n    }\n\n    this.setState(prevstate => ({\n      tableHeaders: [\n        ...prevstate.tableHeaders,\n        newObj\n      ],\n      formActive: false,\n      inEdition: false,\n      onColumnAdding: false,\n    }))\n\n    obj.columnName = '';\n    obj.value = '';\n\n  }\n\n  getEmpoyeesList = (page) => {\n    getEmployees(page)\n      .then(res => {\n        const employees = res.data.userList;\n        const totalNumberOfData = res.data.fullLength\n        this.setState({ employees, totalNumberOfData })\n      })\n      .catch(\n        error => console.log(error)\n      )\n  }\n\n  handleChangeActivePage = (event) => {\n    this.setState({\n      activePage: event.target.value,\n    })\n\n    this.getEmpoyeesList(event.target.value)\n  }\n\n  async componentDidMount() {\n    this.getEmpoyeesList(this.state.activePage)\n  }\n\n  render() {\n    const { employees, formActive, inEdition, checkedEmployees, tableHeaders, onColumnAdding, employeesPerPage, totalNumberOfData, activePage } = this.state;\n\n    return (\n      <div className='mainContent'>\n        <table className='table'>\n          <thead>\n            <tr>\n              {tableHeaders.map(header => (<th key={Object.values(header)}>{Object.values(header)}</th>))}\n            </tr>\n          </thead>\n          <tbody>\n            {employees.map(employee => (\n              <TableLine \n                key={employee._id}\n                employee={employee}\n                handleCheckboxChange={this.handleCheckboxChange}\n                tableHeaders={tableHeaders}\n              />\n            ))}\n          </tbody>\n        </table>\n        <div className='underTableArea'>\n          <Buttons \n            employees={employees} \n            handleDeleteEmployee={this.handleDeleteEmployee}\n            startAddingEmployee={this.startAddingEmployee}\n            startEdittingEmployee={this.startEdittingEmployee}\n            startAddingColumn={this.startAddingColumn}\n            inEdition={inEdition}\n          />\n          <Pagination \n            totalNumberOfData={totalNumberOfData}\n            employeesPerPage={employeesPerPage}\n            handleChangeActivePage={this.handleChangeActivePage}\n            activePage={activePage}\n          />\n        </div>\n        <HiddenTableForm \n          formActive={formActive}\n          handleFormSubmit={this.handleFormSubmit}\n          inEdition={inEdition}\n          checkedEmployees={checkedEmployees}\n          changeCurrentEmployee={this.changeCurrentEmployee}\n        />\n        <HiddenAddColumnForm\n          onColumnAdding={onColumnAdding}\n          handleAddColumnSubmit={this.handleAddColumnSubmit}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}